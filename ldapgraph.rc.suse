#!/bin/sh
# Copyright (c) 2007 Esben Bach
#
# Author: Esben Bach <esben@ofn.dk>
# untested so there are probably errors or bugs         
# /etc/init.d/ldapgraph
#
### BEGIN INIT INFO
# Provides:       ldapgraph
# Required-Start: $net
# Required-Stop:
# Default-Start:  3 5
# Default-Stop:
# Description:    Start the ldapgraph daemon
### END INIT INFO

LDAPGRAPH_BIN=/path/to/ldapgraph.pl
USER='ldap'
GROUP='ldap'

RUNDIR=/var/run/ldapgraph/

test -x $LDAPGRAPH_BIN || exit 5

# Shell functions sourced from /etc/rc.status:
#      rc_check         check and set local and overall rc status
#      rc_status        check and set local and overall rc status
#      rc_status -v     ditto but be verbose in local rc status
#      rc_status -v -r  ditto and clear the local rc status
#      rc_failed        set local and overall rc status to failed
#      rc_failed <num>  set local and overall rc status to <num><num>
#      rc_reset         clear local rc status (overall remains)
#      rc_exit          exit appropriate to overall rc status
. /etc/rc.status

# First reset status of this service
rc_reset

# Return values acc. to LSB for all commands but status:
# 0 - success
# 1 - generic or unspecified error
# 2 - invalid or excess argument(s)
# 3 - unimplemented feature (e.g. "reload")
# 4 - insufficient privilege
# 5 - program is not installed
# 6 - program is not configured
# 7 - program is not running
# 
# Note that starting an already running service, stopping
# or restarting a not-running service as well as the restart
# with force-reload (in case signalling is not supported) are
# considered a success.

case "$1" in
    start)
	echo -n "Starting ldapgraph daemon"
	/sbin/startproc -t 1 -p $RUNDIR/ldapgraph.pid $LDAPGRAPH_BIN --daemonized
        # Remember status and be verbose
        rc_status -v
        STARTPROC_RC=$?
        if [ ${STARTPROC_RC} -eq 0 ]; then
	    echo "Something went wrong: $STARTPROC_RC"
        fi
        ;;
    stop)
        echo -n "Shutting down ldapgraph"
        /sbin/killproc -t 10 -TERM -p $RUNDIR/ldapgraph.pid $LDAPGRAPH_BIN
        # Remember status and be verbose
        rc_status -v

        ;;
    try-restart)
        ## Stop the service and if this succeeds (i.e. the 
        ## service was running before), start it again.
        $0 status >/dev/null &&  $0 restart

        # Remember status and be quiet
        rc_status
        ;;
    restart)
        ## Stop the service and regardless of whether it was
        ## running or not, start it again.
        $0 stop

	## Wait 2 Seconds to be nice
        sleep 2
        $0 start

        # Remember status and be quiet
        rc_status
        ;;
    reload)
        echo -n "Reload ldapgraph"

        killproc -HUP $LDAPGRAPH_BIN
        touch $RUNDIR/ldapgraph.pid
        
	rc_status -v
        ;;
    status)
        echo -n "Checking for ldapgraph: "
        ## Check status with checkproc(8), if process is running
        ## checkproc will return with exit status 0.

        # Status has a slightly different for the status command:
        # 0 - service running
        # 1 - service dead, but /var/run/  pid  file exists
        # 2 - service dead, but /var/lock/ lock file exists
        # 3 - service not running

        # NOTE: checkproc returns LSB compliant status values.

        checkproc -p $RUNDIR/ldapgraph.pid $LDAPGRAPH_BIN
        rc_status -v

        ;;
    *)
        echo "Usage: $0 {start|stop|status|try-restart|restart|reload}"
        exit 1
esac
rc_exit
